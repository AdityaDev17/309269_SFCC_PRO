import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import AnalyticsProvider from "@/components/AnalyticsProvider";
import { DisableDraftMode } from "@/components/DisableDraftMode";
import Footer from "@/components/organisms/Footer/Footer";
import HeaderWrapper from "@/components/organisms/Header/HeaderWrapper";
import { routing } from "@/i18n/routing";
import { WebVitals } from "@/web-vitals";
import { ReactQueryDevtools } from "@tanstack/react-query-devtools";
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { VisualEditing } from "next-sanity";
import { draftMode } from "next/headers";
import { notFound } from "next/navigation";
import Providers from "./providers";

const geistSans = Geist({
	variable: "--font-geist-sans",
	subsets: ["latin"],
});

const geistMono = Geist_Mono({
	variable: "--font-geist-mono",
	subsets: ["latin"],
});

export const metadata: Metadata = {
	title: "SFCC PRO",
	description: "Generated by Pros",
};

export default async function RootLayout({
	children,
	params,
}: Readonly<{
	children: React.ReactNode;
	params: Promise<{ locale: string }>;
}>) {
	const { locale } = await params;
	if (!hasLocale(routing.locales, locale)) {
		notFound();
	}
	return (
		<html lang={locale}>
			<NextIntlClientProvider locale={locale}>
				<body
					className={`${geistSans.variable} ${geistMono.variable}`}
					style={{ width: "100vw" }}
				>
					<Providers>
						<WebVitals />
						<HeaderWrapper />
						<AnalyticsProvider />
						{children}
						{(await draftMode()).isEnabled && (
							<>
								<VisualEditing />
								<DisableDraftMode />
							</>
						)}
						<ReactQueryDevtools initialIsOpen={false} position="bottom" />
					</Providers>
					<Footer />
				</body>
			</NextIntlClientProvider>
		</html>
	);
}
