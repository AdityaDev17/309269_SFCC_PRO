import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { DisableDraftMode } from "@/components/DisableDraftMode";
import { ReactQueryDevtools } from "@tanstack/react-query-devtools";
import { VisualEditing } from "next-sanity";
import { draftMode } from "next/headers";
import Footer from "@/components/organisms/Footer/Footer";
import HeaderWrapper from "@/components/organisms/Header/HeaderWrapper";
import { WebVitals } from "@/web-vitals";
import Providers from "./providers";
import { hasLocale, NextIntlClientProvider } from "next-intl";
import { notFound } from "next/navigation";
import { routing } from "@/i18n/routing";

const geistSans = Geist({
	variable: "--font-geist-sans",
	subsets: ["latin"],
});

const geistMono = Geist_Mono({
	variable: "--font-geist-mono",
	subsets: ["latin"],
});

export const metadata: Metadata = {
	title: "SFCC PRO",
	description: "Generated by Pros",
};

export default async function RootLayout({
  children,
  params
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {

const { locale } = await params;
console.log(hasLocale(routing.locales, locale));
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }
  return (
    <html lang={locale}>
      <NextIntlClientProvider locale={locale}>
        <body
          className={`${geistSans.variable} ${geistMono.variable}`}
          style={{ width: "100vw" }}
        >
          <Providers>
            <WebVitals />
            <HeaderWrapper />
            {children}
            {(await draftMode()).isEnabled && (
              <>
                <VisualEditing />
                <DisableDraftMode />
              </>
            )}
            <ReactQueryDevtools initialIsOpen={false} position="bottom" />
          </Providers>
          <Footer />
        </body>
      </NextIntlClientProvider>
    </html>
  );
}
